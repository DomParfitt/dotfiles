#!/usr/bin/env python

import os
from shutil import which
from subprocess import run
from sys import version_info, exit
from re import match
import argparse


def install_ansible():
    package_managers = {
        "dnf": ["sudo", "dnf", "install", "-y", "ansible"],
        "apt": ["sudo", "apt", "install", "ansible"],
        "pacman": "",
    }

    system_package_manager = None

    for key in package_managers:
        if which(key):
            system_package_manager = key
            break

    if system_package_manager is None:
        use_pip = input(
            "Unknown system package manager. Install Ansible using pip [y/N]? ")

        if match("y", str.lower(use_pip)):
            run(['pip', 'install', '--user', '--upgrade', 'ansible'])
        else:
            print("Not installing Ansible")
            exit(2)
    else:
        install = input(
            f"System package manager is {system_package_manager}. Install Ansible using {system_package_manager} (1) or pip (2)? ")

        if install == "1":
            run(package_managers[system_package_manager])
        elif install == "2":
            run(['pip', 'install', '--user', '--upgrade', 'ansible'])
        else:
            print("Unknown selection")
            exit(2)


def main():
    # Make sure we're using Python 3
    if version_info.major != 3:
        print(
            f'Python 3 required. Current version is {version_info.major}.{version_info.minor}.{version_info.micro}')
        exit(1)

    roles = os.listdir(os.path.join(os.path.dirname(__file__), 'roles'))

    parser = argparse.ArgumentParser(description="Install stuff")
    parser.add_argument('roles', nargs='?', choices=roles, metavar='roles',
                        help='Comma-separate list of roles to run')
    parser.add_argument('-c', '--config-only', action='store_true',
                        help="Only copy config files (i.e. don't install anything). Runs for all roles regardless of whether the roles arg is present")

    args = parser.parse_args()

    # If ansible is not installed, install it
    if which('ansible') is None:
        print("Ansible is not currently installed.")
        install_ansible()

    # Install additional modules
    run(['ansible-galaxy', 'collection', 'install',
        '-r', 'requirements.yml', '--force'])

    if args.config_only:
        tag = 'config'
    elif args.roles:
        tag = args.roles

    additional_args = []
    if tag:
        additional_args = ['--tags', tag]

    # Run the playbook
    run(['ansible-playbook', 'main.yml'] + additional_args)


if __name__ == '__main__':
    main()
